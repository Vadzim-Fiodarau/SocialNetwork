{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Mesages/Message.module.css","components/users/users.module.css","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Mesages/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/users/Users.tsx","redux/users-reducer.tsx","components/users/UsersContainer.tsx","App.tsx","reportWebVitals.ts","redux/sidebar-reducer.tsx","redux/redux-store.tsx","index.tsx"],"names":["module","exports","Header","className","classes","header","src","Navbar","nav","item","to","activeClassName","s","activeLink","ProfileInfo","descriptionBlock","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","id","message","likeCounter","newPostText","Post","props","MyPosts","elementsPosts","map","p","postBlock","value","onChange","e","text","currentTarget","updateNewPostText","onClick","addPost","MyPostsContainer","connect","state","profilePage","dispatch","type","action","newText","updateNewPostTextActionCreator","Profile","News","Music","Settings","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","dialogs","name","messages","newMessageBody","DialogItem","path","dialogsItem","active","img","Message","Dialogs","dialogsPage","dialogsElements","d","messagesElements","m","body","target","updateNewMessageBody","placeholder","sendMessage","DialogsContainer","updateNewMessageBodyCreator","Users","users","length","setUsers","photoUrl","followed","fullName","status","location","city","country","u","styles","userPhoto","unfollow","follow","FOLLOW","UNFOLLOW","SET_USERS","usersReducer","userId","usersPage","followAC","unfollowAC","setUsersAC","App","render","UsersContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","newPost","sidebar","store","createStore","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ca3dd026.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1fzNT\",\"item\":\"Navbar_item__2KL9v\",\"activeLink\":\"Navbar_activeLink__2OYrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2A2-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItem\":\"DialogItem_dialogsItem__EkYNt\",\"active\":\"DialogItem_active__34BdS\",\"img\":\"DialogItem_img__1qoc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__ZllVQ\",\"posts\":\"MyPosts_posts__2J3c4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__awzB9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3ZXvl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__TQXH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1sTUN\",\"message\":\"Message_message__1H2F1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3_GiW\"};","import React from 'react';\r\nimport classes from './Header.module.css'\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img\r\n                src='https://buddy.ghostpool.com/wp-content/themes/buddy/lib/images/logo.png'/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './Navbar.module.css'\r\nimport s from './Navbar.module.css'\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Message</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://buddy.ghostpool.com/wp-content/uploads/photodune-3382849-mountain3-s1-1003x480.jpg'/>\r\n            </div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                avatar +description\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import {ActionsTypes, AddPostActionType, UpdateNewPostTextActionType} from \"./store\";\r\nimport {postsType} from \"../components/Profile/MyPosts/MyPosts\";\r\n\r\nconst ADD_POST = 'ADD POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\ntype stateProfilePropsType = {\r\n    posts: Array<postsType>\r\n    newPostText: string\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hello, how are you?', likeCounter: 12},\r\n        {id: 2, message: \"It's my first post!\", likeCounter: 11},\r\n    ],\r\n    newPostText: ''\r\n}\r\n\r\nexport const profileReducer = (state: stateProfilePropsType = initialState,\r\n                               action: ActionsTypes) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likeCounter: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case\r\n        UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = ()\r\n  : AddPostActionType => ({type: ADD_POST})\r\n\r\nexport const updateNewPostTextActionCreator = (text: string)\r\n  :UpdateNewPostTextActionType =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text})","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\ntype PostType = {\r\n    message: string\r\n    likeCounter: number\r\n}\r\n\r\nconst Post = (props: PostType) => {\r\n    return (\r\n\r\n            <div className={classes.item}>\r\n                <img src='https://www.meme-arsenal.com/memes/7bdea6754f999b50e9577596f09197fb.jpg'/>\r\n                {props.message}\r\n                <div>\r\n                <span>Like </span>\r\n                    <span>{props.likeCounter}</span>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post","import classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport React, {ChangeEvent} from 'react';\r\n\r\n\r\n\r\n\r\nexport type postsType = {\r\n    id: number\r\n    message: string\r\n    likeCounter: number\r\n}\r\ntype MyPostsTypeProps = {\r\n    posts: Array<postsType>\r\n    newPostText: string\r\n    addPost: ()=> void\r\n    updateNewPostText:(text:string) => void\r\n}\r\n\r\n\r\n\r\n\r\nconst MyPosts = (props: MyPostsTypeProps) => {\r\n\r\n    let elementsPosts = props.posts\r\n        .map((p: { message: string; likeCounter: number; }) => <Post message={p.message} likeCounter={p.likeCounter}/>)\r\n\r\n    let onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    let onChangePost = (e:ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.updateNewPostText(text)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea value={props.newPostText} onChange={onChangePost}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.posts}>\r\n                {elementsPosts}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts, {postsType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {statePropsType} from \"../../../redux/store\";\r\n\r\n//\r\n// type MyPostsContainerTypeProps = {\r\n//     // newPostText: string\r\n//     // posts: Array<postsType>\r\n//     // dispatch: (action: ActionsTypes) => void\r\n//     store:ReduxStoreType\r\n// }\r\n\r\n\r\n// const MyPostsContainer = () => {\r\n//     let state = props.store.getState()\r\n//\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator())\r\n//     }\r\n//\r\n//     let onChangePost = (text:string) => {\r\n//         let action = updateNewPostTextActionCreator(text);\r\n//         props.store.dispatch(action)\r\n//     }\r\n//\r\n//      return (<MyPosts updateNewPostText={onChangePost}\r\n//                       addPost={addPost}\r\n//                       posts={state.profilePage.posts}\r\n//                       newPostText={state.profilePage.newPostText}\r\n//\r\n//      />)\r\n// }\r\n//\r\n// export default MyPostsContainer\r\n\r\n\r\n\r\nconst mapStateToProps = (state: statePropsType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updateNewPostText: (text:string) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n","import React from 'react';\r\nimport MyPosts, {postsType} from './MyPosts/MyPosts'\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport Post from \"./MyPosts/Post/Post\";\r\nimport {ActionsTypes, ReduxStoreType} from \"../../redux/store\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n// type ProfileTypeProps = {\r\n//    // posts: Array<postsType>\r\n//    //  newPostText: string\r\n//    //  dispatch: (action:ActionsTypes) => void\r\n//     store:ReduxStoreType\r\n//\r\n// }\r\n\r\nconst Profile = () => {\r\n\r\n        return (\r\n            <div>\r\n                <ProfileInfo/>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Profile\r\n\r\n\r\n// posts ={props.posts}\r\n// dispatch={props.dispatch}\r\n// newPostText={props.newPostText}","import React from 'react';\r\n\r\n\r\n\r\nconst  News = () => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default News","import React from 'react';\r\n\r\n\r\n\r\nconst  Music = () => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Music","import React from 'react';\r\n\r\n\r\n\r\nconst  Settings = () => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Settings","import {ActionsTypes, SendMessageActionType, UpdateNewMessageBodyActionType} from \"./store\";\r\nimport {messagesTypes} from \"../components/Dialogs/Mesages/Message\";\r\nimport {dialogsTypes} from \"../components/Dialogs/DialogItem/DialogItem\";\r\n\r\n\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY'\r\nconst SEND_MESSAGE = 'SEND-MESSAGE'\r\ntype StateDialogsPropsType = {\r\n    messages: Array<messagesTypes>\r\n    dialogs: Array<dialogsTypes>\r\n    newMessageBody: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: 'Vadim',\r\n            src: 'https://sun9-75.userapi.com/impf/c630924/v630924802/1446a/s33tSPeU4Ik.jpg?size=720x1080&quality=96&sign=b00fd02c1e71a239a074008d458dcc40&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Kate',\r\n            src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTirwV3sJSSt0Xf8C43cLbEv2sJR_qWmMpAKnEhdmZbl2b8Cnu8LKZ_CDDvidqsKm4-00k&usqp=CAU'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Alex',\r\n            src: 'https://www.interfax.ru/ftproot/photos/photostory/2019/07/09/week4_700.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Sveta',\r\n            src: 'https://www.istockphoto.com/resources/images/PhotoFTLP/Signature-1205756464.jpg'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Dimych',\r\n            src: 'https://st4.styapokupayu.ru/images/blog_posts/covers/000/136/369_large.jpg?1576853877'\r\n        },\r\n\r\n\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your going?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n    ],\r\n    newMessageBody: ''\r\n}\r\n\r\nexport const dialogsReducer = (state: StateDialogsPropsType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            }\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const sendMessageCreator = (): SendMessageActionType => ({type: SEND_MESSAGE}) as SendMessageActionType\r\n\r\nexport const updateNewMessageBodyCreator = (body: string): UpdateNewMessageBodyActionType =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body})","import s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport type DialogItemProps = {\r\n    id: number\r\n    name: string\r\n    src:string\r\n}\r\nexport type dialogsTypes = {\r\n    id: number\r\n    name: string\r\n    src:string\r\n}\r\n\r\n\r\nconst DialogItem = (props: DialogItemProps) => {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return (\r\n            <div className={s.dialogsItem + ' ' + s.active}>\r\n                <NavLink to={path}> <img className={s.img} src={props.src}/>  {props.name} </NavLink>\r\n\r\n            </div>\r\n    )\r\n}\r\nexport default DialogItem\r\n\r\n","import s from './Message.module.css'\r\nimport React from \"react\";\r\n\r\nexport type MessagePropsType = {\r\n    message: string\r\n    id: number\r\n}\r\nexport type messagesTypes = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n\r\n    // let newMessageElement: any = React.createRef<HTMLInputElement>();\r\n    //\r\n    // let addMessage = () => {\r\n    //     let text = newMessageElement.current.value;\r\n    //      alert(text)\r\n    // }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div className={s.message}>{props.message}</div>\r\n                </div>\r\n                {/*<div>*/}\r\n                {/*    <div>*/}\r\n                {/*        <textarea ref={newMessageElement}></textarea>*/}\r\n                {/*    </div>*/}\r\n                {/*    <div>*/}\r\n                {/*        <button onClick={addMessage}>Add message</button>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    export default Message\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem, {dialogsTypes} from \"./DialogItem/DialogItem\";\r\nimport Message, {messagesTypes} from \"./Mesages/Message\";\r\nimport {dialogsPagePropsType} from \"../../redux/store\";\r\n\r\n\r\n\r\n\r\ntype DialogsPropsType = {\r\n    updateNewMessageBody:(body:string) => void\r\n    sendMessage: ()=> void\r\n    dialogsPage: dialogsPagePropsType\r\n\r\n}\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map((d: { name: string; id: number; src: string }) => <DialogItem name={d.name} id={d.id} src={d.src}/>)\r\n\r\n\r\n    let messagesElements = state.messages\r\n        .map((m: { message: string; id: number; }) => <Message message={m.message} id={m.id}/>)\r\n\r\n\r\n    let newMessageBody = state.newMessageBody\r\n\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.target.value\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div><textarea\r\n                        onChange={onNewMessageChange}\r\n                        value={newMessageBody}\r\n                        placeholder={'enter your name'}>\r\n                    </textarea></div>\r\n                    <div><button onClick={onSendMessageClick }>Send</button></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {dialogsPagePropsType, statePropsType} from \"../../redux/store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype mapStateType = {\r\n    dialogsPage: dialogsPagePropsType\r\n}\r\n\r\nconst mapStateToProps = (state: statePropsType):mapStateType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (body:string) => {\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        }\r\n    }\r\n}\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\nexport default DialogsContainer","import React from \"react\";\r\nimport {initialStateType, setUsersAC} from \"../../redux/users-reducer\";\r\nimport styles from './users.module.css'\r\n\r\nexport type UsersType = {\r\n    users: initialStateType[]\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: initialStateType[]) => void\r\n}\r\n\r\nconst Users = (props: UsersType) => {\r\n\r\n    if(props.users.length === 0){\r\n        props.setUsers([\r\n            {\r\n            id: 1,\r\n            photoUrl: 'https://sun9-75.userapi.com/impf/c630924/v630924802/' +\r\n              '1446a/s33tSPeU4Ik.jpg?size=720x1080&quality=96&sign=b00fd02c1e7' +\r\n              '1a239a074008d458dcc40&type=album',\r\n            followed: true,\r\n            fullName: 'Vadim Fedorov',\r\n            status: 'i am a boss',\r\n            location: {city: 'LA', country: 'USA'}},\r\n            {\r\n                id: 2,\r\n                photoUrl: 'https://encrypted-tbn0.gstatic.com/' +\r\n                  'images?q=tbn:ANd9GcTirwV3sJSSt0Xf8C43cLbEv2sJR_qW' +\r\n                  'mMpAKnEhdmZbl2b8Cnu8LKZ_CDDvidqsKm4-00k&usqp=CAU',\r\n                followed: true,\r\n                fullName: 'Kate Fedorova',\r\n                status: 'i am a wife of boss',\r\n                location: {city: 'LA', country: 'USA'}},\r\n            {\r\n                id: 3,\r\n                photoUrl: 'https://orbita96.ru/upload/medialibrary/fcb' +\r\n                  '/fcbfc077af4ece60c115ae6bb0f90e74.jpg',\r\n                followed: false,\r\n                fullName: 'Maxim Fedorov',\r\n                status: 'i am a son by Vadim and Kate',\r\n                location: {city: 'LA', country: 'USA'}}]\r\n        )\r\n    }\r\n    return(\r\n        <div>\r\n            {\r\n               props.users.map(u => <div key={u.id}>\r\n                   <span>\r\n                       <div>\r\n                           <img src={u.photoUrl} className={styles.userPhoto}/>\r\n                       </div>\r\n                       <div>\r\n                           {\r\n                               u.followed\r\n                               ? <button onClick={()=>\r\n                                   props.unfollow(u.id)}>Unfollow</button>\r\n                               : <button onClick={()=>\r\n                                   props.follow(u.id)}>Follow</button>\r\n                           }\r\n                       </div>\r\n                   </span>\r\n                   <span>\r\n                       <span>\r\n                           <div>{u.fullName}</div>\r\n                           <div>{u.status}</div>\r\n                       </span>\r\n                       <span>\r\n                           <div>{u.location.country}</div>\r\n                           <div>{u.location.city}</div>\r\n                       </span>\r\n                   </span>\r\n               </div> )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users","import {\r\n  ActionsTypes,\r\n  FollowActionType, SetUserType,\r\n  UnfollowActionType,\r\n} from \"./store\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\n\r\nexport type locationType = {\r\n  city: string\r\n  country: string\r\n}\r\nexport type initialStateType = {\r\n  id: number\r\n  photoUrl: string\r\n  followed: boolean\r\n  fullName: string\r\n  status: string\r\n  location: locationType\r\n\r\n}\r\nexport type statePropsType = {\r\n  users: initialStateType[]\r\n}\r\n\r\nconst initialState: statePropsType = {\r\n  users: []\r\n}\r\n\r\nconst usersReducer = (state: statePropsType = initialState,\r\n                      action: ActionsTypes): statePropsType => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: true}\r\n          }\r\n          return u\r\n        })\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: false}\r\n          }\r\n          return u\r\n        })\r\n      }\r\n    case SET_USERS:\r\n      return {\r\n        ...state, users: [...state.users, ...action.users]\r\n      }\r\n    default:\r\n      return state\r\n\r\n  }\r\n}\r\n\r\nexport const followAC = (userId: number): FollowActionType =>\r\n  ({type: FOLLOW, userId})\r\nexport const unfollowAC = (userId: number): UnfollowActionType =>\r\n  ({type: UNFOLLOW, userId})\r\nexport const setUsersAC = (users: initialStateType[]): SetUserType =>\r\n  ({type: SET_USERS, users})\r\n\r\nexport default usersReducer","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    followAC, initialStateType,\r\n    setUsersAC,\r\n    unfollowAC\r\n} from \"../../redux/users-reducer\";\r\nimport {AppPropsType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype mapStateType = {\r\n    users: initialStateType[]\r\n}\r\ntype mapDispatchType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: initialStateType[]) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppPropsType):mapStateType => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch):mapDispatchType => {\r\n    return {\r\n        follow: (userId: number) => {\r\n            dispatch(followAC(userId))\r\n        },\r\n        unfollow: (userId: number) => {\r\n            dispatch(unfollowAC(userId))\r\n        },\r\n        setUsers: (users: initialStateType[]) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/users/UsersContainer\";\n\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className='app-wrapper'>\n                <Header/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/profile' render={() => <Profile/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ActionsTypes, statePropsType} from \"./store\";\r\n\r\ntype StateSidebarPropsType = {}\r\nconst initialState = {}\r\n\r\nexport const sidebarReducer = (state:StateSidebarPropsType =initialState , action:ActionsTypes)=> {\r\n    return state\r\n}","import {combineReducers, createStore} from 'redux'\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\n\r\nexport type AppPropsType = ReturnType<typeof rootReducer>\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer\r\n})\r\n\r\nconst store = createStore(rootReducer)\r\n// @ts-ignore\r\nwindow.store = store\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\n\n// let rerenderEntireTree = () => {\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n            <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n// }\n// //\n// // rerenderEntireTree()\n// //\n// // store.subscribe(rerenderEntireTree)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}