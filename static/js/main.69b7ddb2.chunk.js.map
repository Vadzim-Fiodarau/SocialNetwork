{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/users/users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Dialogs/Mesages/Message.module.css","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Mesages/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","redux/users-reducer.ts","assets/img/users.jpg","api/api.ts","components/users/Users.tsx","assets/img/preloader.gif","common/Preloader/Preloader.tsx","components/users/UsersContainer.tsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/Header/Header.tsx","redux/auth-reducer.tsx","components/Header/HeaderContainer.tsx","App.tsx","reportWebVitals.ts","redux/sidebar-reducer.tsx","redux/redux-store.tsx","index.tsx"],"names":["module","exports","Navbar","className","classes","nav","item","to","activeClassName","s","activeLink","News","Music","Settings","UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","dialogs","id","name","src","messages","message","newMessageBody","DialogItem","props","path","dialogsItem","active","img","Message","Dialogs","state","dialogsPage","dialogsElements","map","d","messagesElements","m","onChange","e","body","target","value","updateNewMessageBody","placeholder","onClick","sendMessage","DialogsContainer","connect","dispatch","type","updateNewMessageBodyCreator","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","action","u","userId","followed","totalCount","filter","instance","axios","create","withCredentials","baseURL","headers","userAPI","get","then","response","data","delete","post","Users","pagesCount","Math","ceil","pages","i","push","p","styles","selectedPage","onPageChanged","photos","small","userPhoto","disabled","some","toggleIsFollowingProgress","resultCode","unfollow","follow","status","Preloader","preloader","UsersContainer","pageNumber","toggleIsFetching","setCurrentPage","setUsers","items","this","setTotalUsersCount","React","Component","usersPage","ProfileInfo","profile","descriptionBlock","large","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","lookingForAJob","lookingForAJobDescription","fullName","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_TYPE","posts","likeCounter","newPostText","Post","MyPosts","elementsPosts","postBlock","text","currentTarget","updateNewPostText","addPost","MyPostsContainer","profilePage","newText","updateNewPostTextActionCreator","Profile","ProfileContainer","match","params","setUserProfile","WithUrlDataContainerComponent","withRouter","Header","header","loginBlock","isAuth","login","SET_USER_DATA","email","HeaderContainer","setAuthUserData","auth","App","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","newPost","sidebar","store","createStore","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.69b7ddb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2A2-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItem\":\"DialogItem_dialogsItem__EkYNt\",\"active\":\"DialogItem_active__34BdS\",\"img\":\"DialogItem_img__1qoc_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3_GiW\",\"selectedPage\":\"users_selectedPage__2lK1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__ZllVQ\",\"posts\":\"MyPosts_posts__2J3c4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__awzB9\",\"loginBlock\":\"Header_loginBlock__3k2ZH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1sTUN\",\"message\":\"Message_message__1H2F1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3ZXvl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__TQXH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1fzNT\",\"item\":\"Navbar_item__2KL9v\",\"activeLink\":\"Navbar_activeLink__2OYrY\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './Navbar.module.css'\r\nimport s from './Navbar.module.css'\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/dialogs' activeClassName={s.activeLink}>Message</NavLink>\r\n            </div>\r\n          <div className={classes.item}>\r\n            <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n          </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\n\r\n\r\n\r\nconst  News = () => {\r\n    return(\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default News","import React from 'react';\r\n\r\n\r\n\r\nconst  Music = () => {\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Music","import React from 'react';\r\n\r\n\r\n\r\nconst  Settings = () => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Settings","\r\nimport {messagesTypes} from \"../components/Dialogs/Mesages/Message\";\r\nimport {dialogsTypes} from \"../components/Dialogs/DialogItem/DialogItem\";\r\nimport {\r\n    ActionsTypes,\r\n    SendMessageActionType,\r\n    UpdateNewMessageBodyActionType\r\n} from \"./users-reducer\";\r\n\r\n\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY'\r\nconst SEND_MESSAGE = 'SEND-MESSAGE'\r\ntype StateDialogsPropsType = {\r\n    messages: Array<messagesTypes>\r\n    dialogs: Array<dialogsTypes>\r\n    newMessageBody: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 1,\r\n            name: 'Vadim',\r\n            src: 'https://sun9-75.userapi.com/impf/c630924/v630924802/1446a/s33tSPeU4Ik.jpg?size=720x1080&quality=96&sign=b00fd02c1e71a239a074008d458dcc40&type=album'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Kate',\r\n            src: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTirwV3sJSSt0Xf8C43cLbEv2sJR_qWmMpAKnEhdmZbl2b8Cnu8LKZ_CDDvidqsKm4-00k&usqp=CAU'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Alex',\r\n            src: 'https://www.interfax.ru/ftproot/photos/photostory/2019/07/09/week4_700.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Sveta',\r\n            src: 'https://www.istockphoto.com/resources/images/PhotoFTLP/Signature-1205756464.jpg'\r\n        },\r\n        {\r\n            id: 5,\r\n            name: 'Dimych',\r\n            src: 'https://st4.styapokupayu.ru/images/blog_posts/covers/000/136/369_large.jpg?1576853877'\r\n        },\r\n\r\n\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your going?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n    ],\r\n    newMessageBody: ''\r\n}\r\n\r\nexport const dialogsReducer = (state: StateDialogsPropsType = initialState, action: ActionsTypes) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            }\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const sendMessageCreator = (): SendMessageActionType => ({type: SEND_MESSAGE}) as SendMessageActionType\r\n\r\nexport const updateNewMessageBodyCreator = (body: string): UpdateNewMessageBodyActionType =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body})","import s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport type DialogItemProps = {\r\n    id: number\r\n    name: string\r\n    src:string\r\n}\r\nexport type dialogsTypes = {\r\n    id: number\r\n    name: string\r\n    src:string\r\n}\r\n\r\n\r\nconst DialogItem = (props: DialogItemProps) => {\r\n    let path = '/dialogs/' + props.id\r\n\r\n    return (\r\n            <div className={s.dialogsItem + ' ' + s.active}>\r\n                <NavLink to={path}> <img className={s.img} src={props.src}/>  {props.name} </NavLink>\r\n\r\n            </div>\r\n    )\r\n}\r\nexport default DialogItem\r\n\r\n","import s from './Message.module.css'\r\nimport React from \"react\";\r\n\r\nexport type MessagePropsType = {\r\n    message: string\r\n    id: number\r\n}\r\nexport type messagesTypes = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n\r\n    // let newMessageElement: any = React.createRef<HTMLInputElement>();\r\n    //\r\n    // let addMessage = () => {\r\n    //     let text = newMessageElement.current.value;\r\n    //      alert(text)\r\n    // }\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div className={s.message}>{props.message}</div>\r\n                </div>\r\n                {/*<div>*/}\r\n                {/*    <div>*/}\r\n                {/*        <textarea ref={newMessageElement}></textarea>*/}\r\n                {/*    </div>*/}\r\n                {/*    <div>*/}\r\n                {/*        <button onClick={addMessage}>Add message</button>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    export default Message\r\n","import React, {ChangeEvent} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem, {dialogsTypes} from \"./DialogItem/DialogItem\";\r\nimport Message, {messagesTypes} from \"./Mesages/Message\";\r\nimport {dialogsPagePropsType} from \"../../redux/store\";\r\n\r\n\r\n\r\n\r\ntype DialogsPropsType = {\r\n    updateNewMessageBody:(body:string) => void\r\n    sendMessage: ()=> void\r\n    dialogsPage: dialogsPagePropsType\r\n\r\n}\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map((d: { name: string; id: number; src: string }) => <DialogItem name={d.name} id={d.id} src={d.src}/>)\r\n\r\n\r\n    let messagesElements = state.messages\r\n        .map((m: { message: string; id: number; }) => <Message message={m.message} id={m.id}/>)\r\n\r\n\r\n    let newMessageBody = state.newMessageBody\r\n\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n\r\n    let onNewMessageChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = e.target.value\r\n        props.updateNewMessageBody(body)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div><textarea\r\n                        onChange={onNewMessageChange}\r\n                        value={newMessageBody}\r\n                        placeholder={'enter your name'}>\r\n                    </textarea></div>\r\n                    <div><button onClick={onSendMessageClick }>Send</button></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {dialogsPagePropsType, statePropsType} from \"../../redux/store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype mapStateType = {\r\n    dialogsPage: dialogsPagePropsType\r\n}\r\n\r\nconst mapStateToProps = (state: statePropsType):mapStateType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (body:string) => {\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator())\r\n        }\r\n    }\r\n}\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\nexport default DialogsContainer","import {profilePagePropsType} from \"./store\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_COUNT = 'SET-TOTAL-COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n\r\n\r\nexport type SetUserType = {\r\n  type: 'SET-USERS'\r\n  users: initialStateType[]\r\n}\r\nexport type UnfollowActionType = {\r\n  type: 'UNFOLLOW'\r\n  userId: number\r\n}\r\nexport type FollowActionType = {\r\n  type: 'FOLLOW'\r\n  userId: number\r\n}\r\nexport type AddPostActionType = {\r\n  type: 'ADD POST'\r\n\r\n}\r\nexport type UpdateNewPostTextActionType = {\r\n  type: 'UPDATE-NEW-POST-TEXT'\r\n  newText: string\r\n}\r\nexport type UpdateNewMessageBodyActionType = {\r\n  type: 'UPDATE-NEW-MESSAGE-BODY'\r\n  body: string\r\n}\r\nexport type SendMessageActionType = {\r\n  type: 'SEND-MESSAGE'\r\n  newMessageBody: string\r\n}\r\nexport type SetCurrentPageType = {\r\n  type: 'SET-CURRENT-PAGE'\r\n  currentPage: number\r\n}\r\nexport type SetTotalCountType = {\r\n  type: 'SET-TOTAL-COUNT'\r\n  totalCount: number\r\n}\r\nexport type ToggleIsFetchingType = {\r\n  type: 'TOGGLE-IS-FETCHING'\r\n  isFetching: boolean\r\n}\r\nexport type ToggleIsFollowingProgressType = {\r\n  type: 'TOGGLE-IS-FOLLOWING-PROGRESS'\r\n  isFetching: boolean,\r\n  userId:number,\r\n\r\n}\r\nexport type setUserProfileType = {\r\n  type: 'SET-USER-TYPE'\r\n  profile: null\r\n}\r\nexport type authActionType = {\r\n  type: 'SET_USER_DATA'\r\n  data: {\r\n    userId: null,\r\n    email: null,\r\n    login: null\r\n  }\r\n}\r\nexport type ActionsTypes =\r\n  | AddPostActionType\r\n  | UpdateNewPostTextActionType\r\n  | UpdateNewMessageBodyActionType\r\n  | SendMessageActionType\r\n  | FollowActionType\r\n  | UnfollowActionType\r\n  | SetUserType\r\n  | SetCurrentPageType\r\n  | SetTotalCountType\r\n  | ToggleIsFetchingType\r\n  | setUserProfileType\r\n  | authActionType\r\n  | ToggleIsFollowingProgressType\r\n\r\n\r\nexport type locationType = {\r\n  city: string\r\n  country: string\r\n}\r\n\r\nexport type initialStateType = {\r\n  id: number\r\n  photos: { small: string, large: string }\r\n  followed: boolean\r\n  name: string\r\n  status: string\r\n  location: locationType\r\n\r\n}\r\nexport type statePropsType = {\r\n  users: initialStateType[]\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: []\r\n}\r\n\r\nconst initialState: statePropsType = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state: statePropsType = initialState,\r\n                      action: ActionsTypes): statePropsType => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: true}\r\n          }\r\n          return u\r\n        })\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.userId) {\r\n            return {...u, followed: false}\r\n          }\r\n          return u\r\n        })\r\n      }\r\n    case SET_USERS: {\r\n      return {\r\n        ...state, users: action.users\r\n      }\r\n    }\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state, currentPage: action.currentPage\r\n      }\r\n    case SET_TOTAL_COUNT: {\r\n      return {\r\n        ...state, totalUsersCount: action.totalCount\r\n      }\r\n    }\r\n    case TOGGLE_IS_FETCHING: {\r\n      return {\r\n        ...state, isFetching: action.isFetching\r\n      }\r\n    }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n      return <statePropsType>{\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n\r\n  }\r\n}\r\n\r\nexport const follow = (userId: number): FollowActionType =>\r\n  ({type: FOLLOW, userId})\r\nexport const unfollow = (userId: number): UnfollowActionType =>\r\n  ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users: initialStateType[]): SetUserType =>\r\n  ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageType =>\r\n  ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalCount: number): SetTotalCountType =>\r\n  ({type: SET_TOTAL_COUNT, totalCount})\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingType =>\r\n  ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleIsFollowingProgress = (isFetching: boolean, userId:number): ToggleIsFollowingProgressType =>\r\n  ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport default usersReducer","export default __webpack_public_path__ + \"static/media/users.6f05a47e.jpg\";","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY': '6a839c08-d4d3-4bf1-a317-273f31facc46'\r\n  }\r\n})\r\n\r\nexport const userAPI = {\r\n  getUsers (currentPage: number, pageSize: number) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => {\r\n        return response.data\r\n      })\r\n  },\r\n  followed(id: number) {\r\n    return instance.delete(`follow/${id}`)\r\n      .then(response => {\r\n        return response.data\r\n      })\r\n  },\r\n  unFollowed(id: number) {\r\n  return instance.post(`follow/${id}`)\r\n    .then(response => {\r\n      return response.data\r\n    })\r\n}\r\n}\r\n\r\n\r\n","import styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/img/users.jpg\";\r\nimport React from \"react\";\r\nimport {\r\n  initialStateType,\r\n} from \"../../redux/users-reducer\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {userAPI} from \"../../api/api\";\r\n\r\nexport type UsersType = {\r\n  users: initialStateType[]\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  follow: (userId: number) => void\r\n  unfollow: (userId: number) => void\r\n  onPageChanged: (pageNumber: number) => void\r\n  toggleIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n  followingInProgress: []\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n  let pages = []\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {\r\n          pages.map(p => {\r\n            return <span\r\n              className={props.currentPage === p ? styles.selectedPage : ''}\r\n              onClick={() => {\r\n                props.onPageChanged(p)\r\n              }}\r\n            >{p}</span>\r\n          })\r\n        }\r\n\r\n\r\n      </div>\r\n      {\r\n        props.users.map(u => <div key={u.id}>\r\n                   <span>\r\n                       <div>\r\n                         <NavLink to={'/profile/' + u.id}>\r\n                           <img\r\n                             src={u.photos.small !== null ? u.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                           </NavLink>\r\n                       </div>\r\n                       <div>\r\n                           {\r\n                             u.followed\r\n                               ? <button\r\n                                 disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                 onClick={() => {\r\n                                   props.toggleIsFollowingProgress(true, u.id)\r\n                                   userAPI.followed(u.id).then(data => {\r\n                                     if (data.resultCode === 0) {\r\n                                       props.unfollow(u.id)\r\n                                     }\r\n                                     props.toggleIsFollowingProgress(false, u.id)\r\n                                   })\r\n                                 }}>Unfollow</button>\r\n\r\n                               : <button\r\n                                 disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                 onClick={() => {\r\n                                   props.toggleIsFollowingProgress(true, u.id)\r\n                                   userAPI.unFollowed(u.id).then(data => {\r\n                                     if (data.resultCode === 0) {\r\n                                       props.follow(u.id)\r\n                                     }\r\n                                     props.toggleIsFollowingProgress(false, u.id)\r\n                                   })\r\n                                 }}>Follow</button>\r\n                           }\r\n                       </div>\r\n                   </span>\r\n          <span>\r\n                       <span>\r\n                           <div>{u.name}</div>\r\n                           <div>{u.status}</div>\r\n                       </span>\r\n                       <span>\r\n                           <div>{'u.location.country'}</div>\r\n                           <div>{'u.location.city'}</div>\r\n                       </span>\r\n                   </span>\r\n        </div>)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/preloader.4c0dabf6.gif\";","import preloader from \"../../assets/img/preloader.gif\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const Preloader = () => {\r\n\r\n  return (\r\n    <div>\r\n      <img src={preloader}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  follow, initialStateType, setCurrentPage, setTotalUsersCount,\r\n  setUsers, toggleIsFetching, toggleIsFollowingProgress,\r\n  unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport {AppPropsType} from \"../../redux/redux-store\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {userAPI} from \"../../api/api\";\r\n\r\ntype mapStateType = {\r\n  users: initialStateType[]\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: []\r\n}\r\ntype mapDispatchType = {\r\n  follow: (userId: number) => void\r\n  unfollow: (userId: number) => void\r\n  setUsers: (users: initialStateType[]) => void\r\n  setCurrentPage: (pageNumber: number) => void\r\n  setTotalUsersCount: (totalCount: number) => void\r\n  toggleIsFetching: (isFetching: boolean) => void\r\n  toggleIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\nexport type UsersAPIType = {\r\n  users: initialStateType[]\r\n  follow: (userId: number) => void\r\n  unfollow: (userId: number) => void\r\n  setUsers: (users: initialStateType[]) => void\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  setCurrentPage: (pageNumber: number) => void\r\n  setTotalUsersCount: (totalCount: number) => void\r\n  isFetching: boolean\r\n  toggleIsFetching: (isFetching: boolean) => void\r\n  toggleIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n  followingInProgress:[]\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersAPIType> {\r\n\r\n  componentDidMount() {\r\n    this.props.toggleIsFetching(true)\r\n\r\n    userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n      this.props.toggleIsFetching(false)\r\n      this.props.setUsers(data.items);\r\n      this.props.setTotalUsersCount(data.totalCount)\r\n    })\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    this.props.toggleIsFetching(true)\r\n    this.props.setCurrentPage(pageNumber);\r\n\r\n    userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\r\n      this.props.toggleIsFetching(false)\r\n      this.props.setUsers(data.items)\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return <>\r\n      {this.props.isFetching ? <Preloader/> : null}\r\n      <Users totalUsersCount={this.props.totalUsersCount}\r\n             pageSize={this.props.pageSize}\r\n             currentPage={this.props.currentPage}\r\n             onPageChanged={this.onPageChanged}\r\n             users={this.props.users}\r\n             follow={this.props.follow}\r\n             unfollow={this.props.unfollow}\r\n             toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n             followingInProgress={this.props.followingInProgress}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppPropsType): mapStateType => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching,\r\n    followingInProgress: state.usersPage.followingInProgress\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  follow,\r\n  unfollow,\r\n  setUsers,\r\n  setCurrentPage,\r\n  setTotalUsersCount,\r\n  toggleIsFetching,\r\n  toggleIsFollowingProgress\r\n} as mapDispatchType)\r\n(UsersContainer)\r\n\r\n","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport {Preloader} from \"../../../../common/Preloader/Preloader\";\r\n\r\n\r\ntype ProfileInfoPropsType = {\r\n  profile: any\r\n}\r\nconst ProfileInfo = (props:ProfileInfoPropsType) => {\r\n  if(!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://buddy.ghostpool.com/wp-content/uploads/photodune-3382849-mountain3-s1-1003x480.jpg'/>\r\n            </div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n              <img src={props.profile.photos.large}/>\r\n              <div>{props.profile.aboutMe}</div>\r\n              <div>{props.profile.contacts.facebook}</div>\r\n              <div>{props.profile.contacts.website}</div>\r\n              <div>{props.profile.contacts.vk}</div>\r\n              <div>{props.profile.contacts.twitter}</div>\r\n              <div>{props.profile.contacts.instagram}</div>\r\n              <div>{props.profile.contacts.youtube}</div>\r\n              <div>{props.profile.lookingForAJob === true\r\n                ? <img src={'https://img5.okidoki.st/c/6/9/3/593086/7358148/15766165_6.jpg'}/>\r\n                : null}</div>\r\n              <div>{props.profile.lookingForAJobDescription}</div>\r\n              <div>{props.profile.fullName}</div>\r\n                avatar +description\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","\r\nimport {postsType} from \"../components/Profile/MyPosts/MyPosts\";\r\nimport {\r\n    ActionsTypes,\r\n    AddPostActionType, setUserProfileType,\r\n    UpdateNewPostTextActionType\r\n} from \"./users-reducer\";\r\nimport {profilePagePropsType} from \"./store\";\r\n\r\nconst ADD_POST = 'ADD POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_TYPE = 'SET-USER-TYPE';\r\n\r\nexport type stateProfilePropsType = {\r\n    posts: Array<postsType>\r\n    newPostText: string\r\n    profile: null\r\n}\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hello, how are you?', likeCounter: 12},\r\n        {id: 2, message: \"It's my first post!\", likeCounter: 11},\r\n    ],\r\n    newPostText: '',\r\n    profile: null\r\n}\r\n\r\nexport const profileReducer = (state: stateProfilePropsType = initialState,\r\n                               action: ActionsTypes) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likeCounter: 0\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case\r\n        UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        case\r\n        SET_USER_TYPE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = ()\r\n  : AddPostActionType => ({type: ADD_POST})\r\n\r\nexport const updateNewPostTextActionCreator = (text: string)\r\n  :UpdateNewPostTextActionType =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\n\r\nexport const setUserProfile = (profile: null)\r\n  :setUserProfileType =>\r\n  ({type: SET_USER_TYPE, profile})","import React from 'react';\r\nimport classes from './Post.module.css'\r\n\r\ntype PostType = {\r\n    message: string\r\n    likeCounter: number\r\n}\r\n\r\nconst Post = (props: PostType) => {\r\n    return (\r\n\r\n            <div className={classes.item}>\r\n                <img src='https://www.meme-arsenal.com/memes/7bdea6754f999b50e9577596f09197fb.jpg'/>\r\n                {props.message}\r\n                <div>\r\n                <span>Like </span>\r\n                    <span>{props.likeCounter}</span>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post","import classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport React, {ChangeEvent} from 'react';\r\n\r\n\r\n\r\n\r\nexport type postsType = {\r\n    id: number\r\n    message: string\r\n    likeCounter: number\r\n}\r\ntype MyPostsTypeProps = {\r\n    posts: Array<postsType>\r\n    newPostText: string\r\n    addPost: ()=> void\r\n    updateNewPostText:(text:string) => void\r\n}\r\n\r\n\r\n\r\n\r\nconst MyPosts = (props: MyPostsTypeProps) => {\r\n\r\n    let elementsPosts = props.posts\r\n        .map((p: { message: string; likeCounter: number; }) => <Post message={p.message} likeCounter={p.likeCounter}/>)\r\n\r\n    let onAddPost = () => {\r\n        props.addPost()\r\n    }\r\n\r\n    let onChangePost = (e:ChangeEvent<HTMLTextAreaElement>) => {\r\n        let text = e.currentTarget.value\r\n        props.updateNewPostText(text)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea value={props.newPostText} onChange={onChangePost}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.posts}>\r\n                {elementsPosts}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts, {postsType} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {statePropsType} from \"../../../redux/store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n//\r\n// type MyPostsContainerTypeProps = {\r\n//     // newPostText: string\r\n//     // posts: Array<postsType>\r\n//     // dispatch: (action: ActionsTypes) => void\r\n//     store:ReduxStoreType\r\n// }\r\n\r\n\r\n// const MyPostsContainer = () => {\r\n//     let state = props.store.getState()\r\n//\r\n//     let addPost = () => {\r\n//         props.store.dispatch(addPostActionCreator())\r\n//     }\r\n//\r\n//     let onChangePost = (text:string) => {\r\n//         let action = updateNewPostTextActionCreator(text);\r\n//         props.store.dispatch(action)\r\n//     }\r\n//\r\n//      return (<MyPosts updateNewPostText={onChangePost}\r\n//                       addPost={addPost}\r\n//                       posts={state.profilePage.posts}\r\n//                       newPostText={state.profilePage.newPostText}\r\n//\r\n//      />)\r\n// }\r\n//\r\n// export default MyPostsContainer\r\n\r\n\r\n\r\nconst mapStateToProps = (state: statePropsType) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        },\r\n        updateNewPostText: (text:string) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n","import React from 'react';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\n// type ProfileTypeProps = {\r\n//    // posts: Array<postsType>\r\n//    //  newPostText: string\r\n//    //  dispatch: (action:ActionsTypes) => void\r\n//     store:ReduxStoreType\r\n//\r\n// }\r\n\r\n\r\ntype ProfilePropsType = {\r\n  profile: any\r\n}\r\nconst Profile = (props: ProfilePropsType) => {\r\n\r\n        return (\r\n            <div>\r\n                <ProfileInfo profile={props.profile}/>\r\n                <MyPostsContainer/>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Profile\r\n\r\n\r\n// posts ={props.posts}\r\n// dispatch={props.dispatch}\r\n// newPostText={props.newPostText}","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppPropsType} from \"../../redux/redux-store\";\r\nimport {setUserProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\ntype mapStateType = {\r\n  profile: null\r\n}\r\n\r\nclass ProfileContainer extends React.Component<any> {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n      userId = 2\r\n    }\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n      .then(response => {\r\n        this.props.setUserProfile(response.data)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile profile={this.props.profile}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppPropsType): mapStateType => {\r\n  return {\r\n    profile: state.profilePage.profile\r\n  }\r\n}\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer)\r\nexport default connect(mapStateToProps, {setUserProfile})(WithUrlDataContainerComponent)\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './Header.module.css'\r\n\r\ntype HeaderType = {\r\n  isAuth: boolean\r\n  login: null\r\n}\r\n\r\nconst Header = (props:HeaderType) => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <img\r\n        src='https://buddy.ghostpool.com/wp-content/themes/buddy/lib/images/logo.png'/>\r\n      <div className={classes.loginBlock}>\r\n        { props.isAuth ? props.login :\r\n          <NavLink to={'/login'}> Login </NavLink> }\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import {ActionsTypes, authActionType} from \"./users-reducer\";\r\n\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\n\r\nexport type AuthPropsType = {\r\n  userId: null\r\n  email: null\r\n  login: null\r\n  isAuth: boolean\r\n}\r\n\r\nconst initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n}\r\n\r\nexport const authReducer = (state: AuthPropsType = initialState, action: ActionsTypes) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n        isAuth: true\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId: null, email: null, login: null): authActionType =>\r\n  ({type: SET_USER_DATA, data: {userId, email, login}})","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthPropsType, setAuthUserData} from \"../../redux/auth-reducer\";\r\nimport {AppPropsType} from \"../../redux/redux-store\";\r\n\r\ntype mapStateToPropsType = {\r\n  isAuth: boolean\r\n  login: null\r\n}\r\n\r\ntype HeaderContainerType = {\r\n  setAuthUserData: (userId: null, email: null, login: null) => void\r\n  isAuth: boolean\r\n  login: null\r\n}\r\nclass HeaderContainer extends React.Component<HeaderContainerType> {\r\n  componentDidMount() {\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/auth/me`, {withCredentials: true})\r\n      .then(response => {\r\n        if(response.data.resultCode === 0) {\r\n          let {id, login, email} = response.data.data\r\n          this.props.setAuthUserData(id, email, login)\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return <Header isAuth={this.props.isAuth}\r\n                   login={this.props.login}\r\n    />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppPropsType): mapStateToPropsType => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateToProps, {setAuthUserData})(HeaderContainer)","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\n\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ActionsTypes} from \"./users-reducer\";\r\n\r\n\r\ntype StateSidebarPropsType = {}\r\nconst initialState = {}\r\n\r\nexport const sidebarReducer = (state:StateSidebarPropsType =initialState , action:ActionsTypes)=> {\r\n    return state\r\n}","import {combineReducers, createStore} from 'redux'\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {sidebarReducer} from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\n\r\nexport type AppPropsType = ReturnType<typeof rootReducer>\r\n\r\nconst rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer\r\n})\r\n\r\nconst store = createStore(rootReducer)\r\n// @ts-ignore\r\nwindow.store = store\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\n\n// let rerenderEntireTree = () => {\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n            <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root'));\n\n// }\n// //\n// // rerenderEntireTree()\n// //\n// // store.subscribe(rerenderEntireTree)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}